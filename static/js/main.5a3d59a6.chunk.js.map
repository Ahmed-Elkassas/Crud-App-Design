{"version":3,"sources":["component/CouresForm.js","component/CouresList.js","App.js","index.js"],"names":["CouresForm","props","className","onSubmit","addCourse","placeholder","type","value","current","onChange","updateCourse","CouresList","state","isEdit","toggleEdit","setState","funcList","details","name","onClick","deleteCourse","index","updateCourseItem","e","preventDefault","editCourse","input","funcUpdate","ref","v","defaultValue","this","Fragment","Component","App","courses","target","push","splice","couresList","map","course","length","ReactDOM","render","document","getElementById"],"mappings":"wOAeeA,EAbI,SAACC,GAEhB,OACI,sBAAKC,UAAU,cAAf,UACI,4CACA,uBAAMC,SAAUF,EAAMG,UAAtB,cACI,uBAAOC,YAAY,YAAYC,KAAK,OAAOC,MAAON,EAAMO,QAASC,SAAUR,EAAMS,eACjF,wBAAQJ,KAAK,SAAb,+BCkDDK,E,4MAxDXC,MAAQ,CACJC,QAAQ,G,EAIZC,WAAa,WAAM,IAEVD,EAAU,EAAKD,MAAfC,OAEL,EAAKE,SAAS,CACVF,QAASA,K,EAKjBG,SAAW,WACP,OACI,+BAEI,sBAAMd,UAAU,OAAhB,SAAwB,EAAKD,MAAMgB,QAAQC,OAC3C,sBAAMC,QAAS,WAAO,EAAKL,cAAeZ,UAAU,YAApD,SACI,mBAAGA,UAAU,wBAEjB,sBAAMiB,QAAS,WAAO,EAAKlB,MAAMmB,aAAa,EAAKnB,MAAMoB,QAASnB,UAAU,aAA5E,SACI,mBAAGA,UAAU,6B,EAKzBoB,iBAAmB,SAACC,GAChBA,EAAEC,iBACF,EAAKvB,MAAMwB,WAAW,EAAKxB,MAAMoB,MAAO,EAAKK,MAAMnB,OACnD,EAAKO,c,EAITa,WAAa,WACb,OACI,uBAAMxB,SAAU,EAAKmB,iBAAkBpB,UAAU,SAAjD,UACI,uBAAOI,KAAK,OAAOsB,IAAK,SAACC,GAAO,EAAKH,MAAQG,GAAIC,aAAc,EAAK7B,MAAMgB,QAAQC,OAClF,wBAAQZ,KAAK,SAAb,wB,4CAMZ,WAAU,IACDO,EAAUkB,KAAKnB,MAAfC,OACL,OACI,cAAC,IAAMmB,SAAP,UACMnB,EAASkB,KAAKJ,aAAeI,KAAKf,iB,GAnD3BiB,aCoFVC,G,kNA7EbtB,MAAQ,CACNuB,QAAU,CACR,CAACjB,KAAM,QACP,CAACA,KAAM,cACP,CAACA,KAAM,QAETV,QAAS,I,EAGTE,aAAe,SAACa,GAEd,EAAKR,SAAS,CACZP,QAASe,EAAEa,OAAO7B,S,EAItBH,UAAY,SAACmB,GACXA,EAAEC,iBAEF,IAAIhB,EAAU,EAAKI,MAAMJ,QACrB2B,EAAU,EAAKvB,MAAMuB,QACrB3B,IACF2B,EAAQE,KAAK,CAACnB,KAAMV,IACpB,EAAKO,SAAS,CACZoB,UACA3B,QAAS,O,EAKfY,aAAe,SAACC,GAEd,IAAIc,EAAU,EAAKvB,MAAMuB,QAEzBA,EAAQG,OAAOjB,EAAO,GAEtB,EAAKN,SAAS,CACZoB,a,EAIJV,WAAa,SAACJ,EAAOd,GAAW,IAEzB4B,EAAW,EAAKvB,MAAhBuB,QACQA,EAAQd,GACf,KAAWd,EACjB,EAAKQ,SAAS,CACZoB,a,4CAIN,WAAU,IAAD,OAGDI,EADYR,KAAKnB,MAAhBuB,QACoBK,KAAK,SAACC,EAAQpB,GACvC,OAAO,cAAC,EAAD,CACPJ,QAASwB,EACTpB,MAAOA,EACPD,aAAc,EAAKA,aACnBK,WAAY,EAAKA,YAHKJ,MAOxB,OACE,cAAC,IAAMW,SAAP,UACE,sBAAK9B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAYM,QAASuB,KAAKnB,MAAMJ,QAASE,aAAcqB,KAAKrB,aAAcN,UAAW2B,KAAK3B,YAC1F,6BACG2B,KAAKnB,MAAMuB,QAAQO,OAAS,EAAIH,EAC/B,mBAAGrC,UAAU,UAAb,wD,GAtEI+B,cCDlBU,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5a3d59a6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst CouresForm = (props) => {\r\n\r\n    return ( \r\n        <div className='course-form'>\r\n            <h3>Add Course</h3>\r\n            <form onSubmit={props.addCourse}> {/* step two [2] */}\r\n                <input placeholder=\"type here\" type=\"text\" value={props.current} onChange={props.updateCourse} />\r\n                <button type=\"submit\">Add Coures</button>\r\n            </form>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default CouresForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass CouresList extends Component {\r\n    state = { \r\n        isEdit: false\r\n    }\r\n\r\n\r\n    toggleEdit = () => {\r\n        // clone\r\n        let {isEdit} = this.state\r\n        // update\r\n        this.setState({\r\n            isEdit: !isEdit    // Toggle\r\n        })\r\n    }\r\n\r\n\r\n    funcList = () => {\r\n        return (\r\n            <li>\r\n                {/* step one [1] */}\r\n                <span className='name'>{this.props.details.name}</span>\r\n                <span onClick={() => {this.toggleEdit()}} className=\"edit-icon\">\r\n                    <i className=\"far fa-edit fa-2x\"></i>\r\n                </span>\r\n                <span onClick={() => {this.props.deleteCourse(this.props.index)}} className='trash-icon'>\r\n                    <i className=\"fas fa-trash fa-2x\"></i>\r\n                </span>\r\n            </li>\r\n            )}\r\n\r\n        updateCourseItem = (e) => {\r\n            e.preventDefault();\r\n            this.props.editCourse(this.props.index, this.input.value);\r\n            this.toggleEdit();\r\n        }\r\n        \r\n\r\n        funcUpdate = () => {\r\n        return (\r\n            <form onSubmit={this.updateCourseItem} className=\"update\">\r\n                <input type='text' ref={(v) => {this.input = v}} defaultValue={this.props.details.name} />\r\n                <button type='submit'>update</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    render() { \r\n        let {isEdit} = this.state;\r\n        return ( \r\n            <React.Fragment>\r\n                { isEdit ? this.funcUpdate() : this.funcList()}\r\n            </React.Fragment>\r\n            );\r\n    }\r\n}\r\n\r\nexport default CouresList;","import React, { Component } from 'react';\n\nimport CouresForm from './component/CouresForm';\nimport CouresList from './component/CouresList';\n\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    courses : [\n      {name: \"HTML\"},\n      {name: \"JavaScript\"},\n      {name: \"CSS\"}\n    ],\n    current: ''\n    }\n\n    updateCourse = (e) => { // step two [2]\n      // console.log(e.target.value); this is for check only \n      this.setState({\n        current: e.target.value\n      })\n    }\n\n    addCourse = (e) => {\n      e.preventDefault();\n      // console.log(`add course`); for check only\n      let current = this.state.current;\n      let courses = this.state.courses;\n      if (current) {\n        courses.push({name: current})\n        this.setState({\n          courses,\n          current: ''\n        })\n      }\n    }\n\n    deleteCourse = (index) => {\n      // clone\n      let courses = this.state.courses;\n      // Edit\n      courses.splice(index, 1);\n      // update\n      this.setState({\n        courses\n      })\n    }\n\n    editCourse = (index, value) => {\n\n      let {courses} = this.state;\n      let course = courses[index];\n      course['name'] = value;\n      this.setState({\n        courses\n      })\n    }\n\n  render() { \n\n    const {courses} = this.state; // step one [1]\n    const couresList = courses.map( (course, index) => {\n      return <CouresList \n      details={course} key={index} \n      index={index} \n      deleteCourse={this.deleteCourse} \n      editCourse={this.editCourse}\n      />\n    })\n\n    return ( \n      <React.Fragment>\n        <div className='container con-two'>\n          <CouresForm current={this.state.current} updateCourse={this.updateCourse} addCourse={this.addCourse} />\n          <ul>\n            {this.state.courses.length > 0 ? couresList \n            : <p className='massage'>Please Enter your course name !</p>}\n          </ul>\n        </div>\n      </React.Fragment>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"../node_modules/@fortawesome/fontawesome-free/css/all.min.css\";\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}